[{"/Users/Chris/React-Bootcamp-2020/graphql-checklist/src/index.js":"1","/Users/Chris/React-Bootcamp-2020/graphql-checklist/src/App.js":"2"},{"size":1132,"mtime":1610222040362,"results":"3","hashOfConfig":"4"},{"size":3297,"mtime":1610556325605,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8","usedDeprecatedRules":"9"},"ry80tb",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Chris/React-Bootcamp-2020/graphql-checklist/src/index.js",["12"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n// Setup and instantiate Apollo Client\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client'\n// Add provider for use with React Context hook\n// This is how Apollo manages state throughout our entire application / component tree\nimport { ApolloProvider } from '@apollo/client'\n\n// configure endpoint for serverless backend / GraphQL API (Hasura)\nconst client = new ApolloClient({\n  uri: 'https://tight-haddock-21.hasura.app/v1/graphql',\n  cache: new InMemoryCache()\n})\n\n// client.query({\n//   query: gql`\n//     query getTodos {\n//   todos {\n//     done\n//     id\n//     text\n//   }\n// }\n//   `\n// }).then(data => console.log(data))\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n",["13","14"],"/Users/Chris/React-Bootcamp-2020/graphql-checklist/src/App.js",[],{"ruleId":"15","severity":1,"message":"16","line":5,"column":39,"nodeType":"17","messageId":"18","endLine":5,"endColumn":42},{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","no-native-reassign",["23"],"no-negated-in-lhs",["24"],"no-global-assign","no-unsafe-negation"]